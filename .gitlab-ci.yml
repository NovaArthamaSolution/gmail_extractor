image:
  name: asia.gcr.io/bi-gojek/gmail2bq-base

stages:
  - testing
  - deploy
  - scheduled

variables:
  PATH_CREDENTIAL: "/tmp/gmail2bq.id_rsa"
  ANSIBLE_HOST_KEY_CHECKING: "false"
  PLUGIN_NAME: entbi-gmail2bq
  ARTIFACTORY_IMAGE: artifactory-gojek.golabs.io:6555/${PLUGIN_NAME}
  GCR_IMAGE: asia.gcr.io/systems-0001/optimus/${PLUGIN_NAME}
  tmp_dir: tmp
  export_dir: data/in

# before_script:
#   - mkdir -p $export_dir $tmp_dir
#   - cp $GOOGLE_APPLICATION_CREDENTIALS $tmp_dir/
#   - cp $GMAIL_CREDENTIAL_FILE $tmp_dir/credentials.json

testing:config:
  image: "python:3.8"
  stage: testing
  except:
    - schedules
  script:
    - pip install -qr requirements.txt
    - python tests/config_validation.py tests/config_schema.yaml configs/


testing:unit:
  stage: testing
  except:
    - schedules
  tags:
    - docker
    - docker_artifactory
  variables:
    env : TEST_CONFIG
  artifacts:
    untracked: false
    expire_in: "7 days"
    name: "$CI_COMMIT_BRANCH"
    paths:
      - "cache$CI_JOB_ID/*"
  cache:
      key: build-cache
      paths:
      - cache$CI_JOB_ID/
  before_script:
    - mkdir cache$CI_JOB_ID
  script:
    - if [ $CI_COMMIT_BRANCH  != "master" ] &&  [ $CI_COMMIT_BRANCH != "" ]; then CONFIG_DIRPATH=$CI_COMMIT_BRANCH; fi
    - DSTART=`date +"%Y-%m-%d" -d "$delta_day day" `
    - DEND=`date +"%Y-%m-%d" -d "$DSTART + 1 day" ` 
    - echo "BQ_SERVICE_ACCOUNT=$BQ_SERVICE_ACCOUNT" >> .app.conf	
    - docker build  --no-cache  -t ${ARTIFACTORY_IMAGE}:tests -f $( pwd )/tests/Dockerfile . 
    - docker run --env-file .app.conf -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/GOOGLE_APPLICATION_CREDENTIALS --mount type=bind,source=$GOOGLE_APPLICATION_CREDENTIALS,target=/tmp/GOOGLE_APPLICATION_CREDENTIALS -v `pwd`/cache$CI_JOB_ID:/data/out -v `pwd`/configs/${CONFIG_DIRPATH}:/$export_dir --mount type=bind,source=$GMAIL_TOKEN_FILE,target=/data/in/token.json -e env='TEST_CONFIG' ${ARTIFACTORY_IMAGE}:tests /$export_dir/config.yaml -s $DSTART -e $DEND

build:docker:  
  image: docker:latest
  stage: deploy
  services:
    - docker:18.09.7-dind
  # variables:
  #   DOCKER_HOST: tcp://docker:2375/
  #   DOCKER_DRIVER: overlay2
  tags:
    - docker
    - docker_artifactory
    - docker_gcr
    # - dind
  variables:
    tmp_dir: tmp
    export_dir: data/in
  script:
    - tag="latest"
    - docker build --no-cache -t ${ARTIFACTORY_IMAGE}:${tag} -t ${GCR_IMAGE}:${tag} -f $( pwd )/Dockerfile .
    - docker push ${ARTIFACTORY_IMAGE}:${tag}
    - gcloud docker -- push ${GCR_IMAGE}:${tag}
  only:
    - master
  except:
    - schedules

build:tagged:  
  image: docker:latest
  stage: deploy
  services:
    - docker:18.09.7-dind
  # variables:
  #   DOCKER_HOST: tcp://docker:2375/
  #   DOCKER_DRIVER: overlay2
  tags:
    - docker
    - docker_artifactory
#   - docker_gcr
    # - dind
  variables:
    tmp_dir: tmp
    export_dir: data/in
  script:
    - tag="${CI_COMMIT_TAG:1}"
    - docker build --no-cache -t ${ARTIFACTORY_IMAGE}:${tag} -t ${GCR_IMAGE}:${tag} -f $( pwd )/Dockerfile .
    - docker push ${ARTIFACTORY_IMAGE}:${tag}
    - gcloud docker -- push ${GCR_IMAGE}:${tag}
  only:
    variables:
      - $CI_COMMIT_TAG =~ /^v.*$/
  except:
    - schedules

run_schedules:
  only:
    - schedules
  tags:
    - docker
    - docker_artifactory
  stage: scheduled
  # variables:
  #   GOOGLE_APPLICATION_CREDENTIALS: /root/gcloud-credential.json
  artifacts:
    untracked: false
    when: on_success
    expire_in: "7 days"
    name: "$CI_COMMIT_BRANCH"
    paths:
      - "cache$CI_JOB_ID/*"
  cache:
      key: build-cache
      paths:
      - cache$CI_JOB_ID/
  before_script:
    - mkdir cache$CI_JOB_ID
  before_script:
    - DSTART=`date +"%Y-%m-%d" -d "$delta_day day" ` 
    - DEND=`date +"%Y-%m-%d" -d "$DSTART + 1 day" ` 
    - echo "BQ_SERVICE_ACCOUNT=$BQ_SERVICE_ACCOUNT" >> .app.conf	
    - echo "env=TEST_CONFIG" >> .app.conf
  script:
   - docker run --env-file .app.conf -e GOOGLE_APPLICATION_CREDENTIALS=/tmp/GOOGLE_APPLICATION_CREDENTIALS -v `pwd`/configs/${CONFIG_DIRPATH}:/$export_dir -v `pwd`/cache$CI_JOB_ID:/data/out --mount type=bind,source=$GMAIL_TOKEN_FILE,target=/data/in/token.json --mount type=bind,source=$GOOGLE_APPLICATION_CREDENTIALS,target=/tmp/GOOGLE_APPLICATION_CREDENTIALS ${ARTIFACTORY_IMAGE}:latest /$export_dir/config.yaml -s $DSTART
